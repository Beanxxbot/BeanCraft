// Date: 10/9/2014 11:36:52 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.beanbot.beancraft.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBioExtractor extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer Extraction_Pedistal;
    ModelRenderer Extraction_Arm_1;
    ModelRenderer Extraction_Arm_2;
    ModelRenderer Connection_1;
    ModelRenderer Connection_2;
  
  public ModelBioExtractor()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Base = new ModelRenderer(this, 0, 0);
      Base.addBox(-8F, 14F, -8F, 16, 10, 16);
      Base.setRotationPoint(0F, 0F, 0F);
      Base.setTextureSize(128, 128);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      Extraction_Pedistal = new ModelRenderer(this, 0, 36);
      Extraction_Pedistal.addBox(-2F, 10F, -2F, 4, 4, 4);
      Extraction_Pedistal.setRotationPoint(0F, 0F, 0F);
      Extraction_Pedistal.setTextureSize(128, 128);
      Extraction_Pedistal.mirror = true;
      setRotation(Extraction_Pedistal, 0F, 0F, 0F);
      Extraction_Arm_1 = new ModelRenderer(this, 65, 0);
      Extraction_Arm_1.addBox(7F, 8F, -1F, 1, 6, 2);
      Extraction_Arm_1.setRotationPoint(0F, 0F, 0F);
      Extraction_Arm_1.setTextureSize(128, 128);
      Extraction_Arm_1.mirror = true;
      setRotation(Extraction_Arm_1, 0F, 0F, 0F);
      Extraction_Arm_2 = new ModelRenderer(this, 65, 0);
      Extraction_Arm_2.addBox(-8F, 8F, -1F, 1, 6, 2);
      Extraction_Arm_2.setRotationPoint(0F, 0F, 0F);
      Extraction_Arm_2.setTextureSize(128, 128);
      Extraction_Arm_2.mirror = true;
      setRotation(Extraction_Arm_2, 0F, 0F, 0F);
      Connection_1 = new ModelRenderer(this, 73, 5);
      Connection_1.addBox(-8F, 0F, 0F, 8, 1, 2);
      Connection_1.setRotationPoint(7F, 8F, -1F);
      Connection_1.setTextureSize(128, 128);
      Connection_1.mirror = true;
      setRotation(Connection_1, 0F, 0F, -0.3346075F);
      Connection_2 = new ModelRenderer(this, 73, 5);
      Connection_2.addBox(0F, 0F, 0F, 8, 1, 2);
      Connection_2.setRotationPoint(-7F, 8F, -1F);
      Connection_2.setTextureSize(128, 128);
      Connection_2.mirror = true;
      setRotation(Connection_2, 0F, 0F, 0.3346145F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Base.render(f5);
    Extraction_Pedistal.render(f5);
    Extraction_Arm_1.render(f5);
    Extraction_Arm_2.render(f5);
    Connection_1.render(f5);
    Connection_2.render(f5);
  }

  public void renderModel(float f)
  {
      Base.render(f);
      Extraction_Pedistal.render(f);
      Extraction_Arm_1.render(f);
      Extraction_Arm_2.render(f);
      Connection_1.render(f);
      Connection_2.render(f);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}

// Date: 9/15/2014 9:48:02 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.beanbot.beancraft.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelBioGen extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer EdgeLeft;
    ModelRenderer EdgeRight;
    ModelRenderer EdgeBack;
    ModelRenderer EdgeFront;
    ModelRenderer CrystalBall;
    ModelRenderer CrystalLR;
    ModelRenderer CrystalBR;
    ModelRenderer Shape1;
  
  public ModelBioGen()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Base = new ModelRenderer(this, 0, 0);
      Base.addBox(-7F, 16F, -7F, 14, 8, 14);
      Base.setRotationPoint(0F, 0F, 0F);
      Base.setTextureSize(64, 32);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      EdgeLeft = new ModelRenderer(this, 15, 1);
      EdgeLeft.addBox(5F, 15F, 0F, 1, 1, 12);
      EdgeLeft.setRotationPoint(0F, 0F, -6F);
      EdgeLeft.setTextureSize(64, 32);
      EdgeLeft.mirror = true;
      setRotation(EdgeLeft, 0F, 0F, 0F);
      EdgeRight = new ModelRenderer(this, 15, 1);
      EdgeRight.addBox(-6F, 15F, -6F, 1, 1, 12);
      EdgeRight.setRotationPoint(0F, 0F, 0F);
      EdgeRight.setTextureSize(64, 32);
      EdgeRight.mirror = true;
      setRotation(EdgeRight, 0F, 0F, 0F);
      EdgeBack = new ModelRenderer(this, 15, 0);
      EdgeBack.addBox(-6F, 15F, 5F, 12, 1, 1);
      EdgeBack.setRotationPoint(0F, 0F, 0F);
      EdgeBack.setTextureSize(64, 32);
      EdgeBack.mirror = true;
      setRotation(EdgeBack, 0F, 0F, 0F);
      EdgeFront = new ModelRenderer(this, 15, 0);
      EdgeFront.addBox(-6F, 15F, -6F, 12, 1, 1);
      EdgeFront.setRotationPoint(0F, 0F, 0F);
      EdgeFront.setTextureSize(64, 32);
      EdgeFront.mirror = true;
      setRotation(EdgeFront, 0F, 0F, 0F);
      CrystalBall = new ModelRenderer(this, 0, 24);
      CrystalBall.addBox(-2F, 9F, -2F, 4, 4, 4);
      CrystalBall.setRotationPoint(0F, 0F, 0F);
      CrystalBall.setTextureSize(64, 32);
      CrystalBall.mirror = true;
      setRotation(CrystalBall, 0F, 0F, 0F);
      CrystalLR = new ModelRenderer(this, 0, 28);
      CrystalLR.addBox(-3F, 10F, -1F, 6, 2, 2);
      CrystalLR.setRotationPoint(0F, 0F, 0F);
      CrystalLR.setTextureSize(64, 32);
      CrystalLR.mirror = true;
      setRotation(CrystalLR, 0F, 0F, 0F);
      CrystalBR = new ModelRenderer(this, 0, 24);
      CrystalBR.addBox(-1F, 10F, -3F, 2, 2, 6);
      CrystalBR.setRotationPoint(0F, 0F, 0F);
      CrystalBR.setTextureSize(64, 32);
      CrystalBR.mirror = true;
      setRotation(CrystalBR, 0F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 4, 24);
      Shape1.addBox(-1F, 8F, -1F, 2, 6, 2);
      Shape1.setRotationPoint(0F, 0F, 0F);
      Shape1.setTextureSize(64, 32);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Base.render(f5);
    EdgeLeft.render(f5);
    EdgeRight.render(f5);
    EdgeBack.render(f5);
    EdgeFront.render(f5);
    CrystalBall.render(f5);
    CrystalLR.render(f5);
    CrystalBR.render(f5);
    Shape1.render(f5);
  }

  public void renderModel(float f)
  {
      Base.render(f);
      EdgeLeft.render(f);
      EdgeRight.render(f);
      EdgeBack.render(f);
      EdgeFront.render(f);
      CrystalBall.render(f);
      CrystalLR.render(f);
      CrystalBR.render(f);
      Shape1.render(f);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  }

}

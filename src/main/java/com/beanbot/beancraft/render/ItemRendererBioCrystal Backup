package com.beanbot.beancraft.render;

import com.beanbot.beancraft.model.IModelBC;
import com.beanbot.beancraft.model.ModelBioCrystal;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.IItemRenderer;
import net.minecraftforge.client.model.AdvancedModelLoader;
import net.minecraftforge.client.model.IModelCustom;
import org.lwjgl.opengl.GL11;

public class ItemRendererBioCrystal implements IItemRenderer
{
    public ResourceLocation texture;
    public IModelCustom model;
    public IModelBC modelBC;
    //protected ModelBioCrystal modelBioCrystal;

    ResourceLocation bioCrystalTexture = new ResourceLocation("beancraft", "/textures/models/bioCrystal.png");

    public ItemRendererBioCrystal()
    {
    }

    public ItemRendererBioCrystal(ResourceLocation model, ResourceLocation texture)
    {
        this.model = AdvancedModelLoader.loadModel(model);
        this.texture = texture;
    }

    public ItemRendererBioCrystal(IModelBC model, ResourceLocation texture)
    {
        this.modelBC = model;
        this.texture = texture;
    }

    @Override
    public boolean handleRenderType(ItemStack item, ItemRenderType type)
    {
        switch(type)
        {
        case EQUIPPED: return true;
        case EQUIPPED_FIRST_PERSON: return true;
        case ENTITY: return true;
        case INVENTORY: return false;
        default: return false;
        }
    }

    public void renderItem(double x, double y, double z)
    {
        GL11.glPushMatrix();
        GL11.glTranslatef((float) x + 0.5F, (float) y + 0.0F, (float) z + 0.5F);

        Minecraft.getMinecraft().getTextureManager().bindTexture(bioCrystalTexture);

        if (model != null)
        {
            GL11.glScalef(0.5F, 0.5F, 0.5F);
            model.renderAll();
        }
        else
        {
            GL11.glTranslated(0, -0.5, 0);
            modelBC.render(0.0625F);
        }
    }

    @Override
    public boolean shouldUseRenderHelper(ItemRenderType type, ItemStack item, ItemRendererHelper helper)
    {
        return helper == ItemRendererHelper.INVENTORY_BLOCK || helper == ItemRendererHelper.ENTITY_BOBBING || helper == ItemRendererHelper.ENTITY_ROTATION;
    }

    @Override
    public void renderItem(ItemRenderType type, ItemStack item, Object... data)
    {
        GL11.glPushMatrix();
        Minecraft.getMinecraft().renderEngine.bindTexture(bioCrystalTexture);
        float scale = 1.2F;
        GL11.glScalef(scale, scale, scale);

        switch(type)
        {
            case ENTITY:


                GL11.glTranslatef(0.0F, 0.25F, 0.0F);


                break;

            case EQUIPPED:

                GL11.glRotatef(0F, 0.0F, 0.0F, 0.0F);

                GL11.glTranslatef(0.55F, 0.35F, 0.0F);

                GL11.glPopMatrix();
                break;

            case EQUIPPED_FIRST_PERSON:

                GL11.glTranslatef(0.55F, 0.35F, 0.0F);

                break;

            case INVENTORY:

                GL11.glTranslatef(0.0F, 0.25F, 0.0F);

                break;
            case FIRST_PERSON_MAP:
                break;
            default:
                break;
        }

        //modelBioCrystal.render((Entity)data[1], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0625F);
        renderItem(0, 0, 0);
        GL11.glPopMatrix();
    }
}
